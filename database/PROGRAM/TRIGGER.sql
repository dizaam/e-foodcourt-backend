-- TRIGGER
create or replace TRIGGER AFTER_INSERT_CUSTOMER
AFTER INSERT ON customer
FOR EACH ROW
BEGIN
    -- CREATE A CART WHENEVER CUSTOMER CREATED
    INSERT INTO CART(ID, TOTAL_ITEM, TOTAL_PRICE, CUSTOMER_ID)
    VALUES(NULL, 0, 0, :new.id);
END;
/

CREATE OR REPLACE TRIGGER AFTER_DELETE_INSERT_UPDATE_CART_ITEM
AFTER DELETE OR INSERT OR UPDATE ON CART_ITEM
FOR EACH ROW
BEGIN
    IF DELETING THEN
        -- UPDATE CART AFTER DOING SOMETHING ON CART_ITEM
        UPDATE CART SET
            TOTAL_ITEM = TOTAL_ITEM - :OLD.QUANTITY,
            TOTAL_PRICE = TOTAL_PRICE - (:OLD.QUANTITY * (SELECT PRICE FROM PRODUCT WHERE ID = :OLD.PRODUCT_ID))
        WHERE ID = :OLD.CART_ID;
        
    ELSIF INSERTING THEN
        -- UPDATE CART AFTER DOING SOMETHING ON CART_ITEM
        UPDATE CART SET
            TOTAL_ITEM = TOTAL_ITEM + :NEW.QUANTITY,
            TOTAL_PRICE = TOTAL_PRICE + (:NEW.QUANTITY * (SELECT PRICE FROM PRODUCT WHERE ID = :NEW.PRODUCT_ID))
        WHERE ID = :NEW.CART_ID;
        
    ELSIF UPDATING THEN
        UPDATE CART SET
            TOTAL_ITEM = TOTAL_ITEM + (:NEW.QUANTITY - :OLD.QUANTITY),
            TOTAL_PRICE = TOTAL_PRICE + ((:NEW.QUANTITY - :OLD.QUANTITY) * (SELECT PRICE FROM PRODUCT WHERE ID = :NEW.PRODUCT_ID))
        WHERE ID = :NEW.CART_ID;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER AFTER_INSERT_ORDERS_ITEM
AFTER INSERT ON ORDERS_ITEM
FOR EACH ROW
DECLARE
    L_PRICE PRODUCT.PRICE%TYPE;
    L_CART_ID INTEGER;
    L_CUSTOMER_ID INTEGER;
BEGIN
    -- GET PRICE
    SELECT PRICE INTO L_PRICE
    FROM PRODUCT
    WHERE ID = :NEW.PRODUCT_ID;

    -- UPDATE TOTAL IN ORDERS
    UPDATE ORDERS SET
        TOTAL_ITEM = TOTAL_ITEM + :NEW.QUANTITY,
        TOTAL_PRICE = TOTAL_PRICE + (L_PRICE * :NEW.QUANTITY)
    WHERE ID = :NEW.ORDERS_ID;
    
    -- UPDATE STOCK PRODUCT
    UPDATE PRODUCT SET
        STOCK = STOCK - :NEW.QUANTITY
    WHERE ID = :NEW.PRODUCT_ID;
    
    SELECT CUSTOMER_ID INTO L_CUSTOMER_ID
    FROM ORDERS 
    WHERE ID = :NEW.ORDERS_ID;
    
    L_CART_ID := GET_CART_ID(L_CUSTOMER_ID);
    DELETE FROM CART_ITEM
    WHERE CART_ID = L_CART_ID AND PRODUCT_ID = :NEW.PRODUCT_ID;
END;
/

CREATE OR REPLACE TRIGGER AFTER_UPDATE_ORDERS
AFTER UPDATE ON ORDERS
FOR EACH ROW
BEGIN
    -- UPDATE INVOICE AFTER SOMETHING HAPPEN ON ORDERS
    UPDATE INVOICE SET
        BILL = BILL + (:NEW.TOTAL_PRICE - :OLD.TOTAL_PRICE) + ((:NEW.TOTAL_PRICE - :OLD.TOTAL_PRICE) * FEE)
    WHERE ID = :NEW.INVOICE_ID;
END;
/


    

    


