-- DATA MANIPULATION LANGUAGE
SET SERVEROUTPUT ON;
--SEPUTAR CUSTOMER
SELECT *
FROM CUSTOMER;

INSERT INTO CUSTOMER(ID, EMAIL, FULL_NAME, PASSWORD, PHONE, GENDER, IS_LOGIN, CREATED_AT, UPDATED_AT)
VALUES (NULL, 'wozak@gmail.com', 'wowo zazak', , L_PHONE, L_GENDER, 0, SYSDATE, SYSDATE);

DELETE FROM CUSTOMER WHERE CUSTOMER.ID = 22;

DECLARE
    X INTEGER := -1;
BEGIN
--    X := CREATE_NEW_CUSTOMER('ranjau@gmail.com', 'ranj', 'qwerty', '0821231
    X := AUTHENTICATE_CUSTOMER('abadul1', '123');
    DBMS_OUTPUT.PUT_LINE('X: ' || X);
END;


--
-- PL SQL PROCEDURE/FUNCTION DECLARATION
--
CREATE OR REPLACE PROCEDURE READ_A_CUSTOMER(L_CUSTOMER_ID IN INTEGER) IS
    L_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN L_CURSOR FOR
        SELECT *
        FROM CUSTOMER
        WHERE ID = L_CUSTOMER_ID;
        
    DBMS_SQL.RETURN_RESULT(L_CURSOR);
END;
/

CREATE OR REPLACE PROCEDURE READ_ALL_CUSTOMER IS
    L_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN L_CURSOR FOR
        SELECT *
        FROM CUSTOMER
        ORDER BY ID;
        
    DBMS_SQL.RETURN_RESULT(L_CURSOR);
END;
/

CREATE OR REPLACE FUNCTION CREATE_CUSTOMER(L_EMAIL IN STRING, L_FULLNAME IN STRING, L_PASSWORD IN STRING, L_PHONE IN STRING, L_GENDER IN STRING) RETURN NUMBER
AS
BEGIN

    INSERT INTO CUSTOMER(ID, EMAIL, FULL_NAME, PASSWORD, PHONE, GENDER, IS_LOGIN)
    VALUES (NULL, LOWER(L_EMAIL), L_FULLNAME, L_PASSWORD, L_PHONE, L_GENDER, 0);
    
    RETURN 0;
    EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            RETURN 1;
END;
/

CREATE OR REPLACE FUNCTION DELETE_A_CUSTOMER(L_CUSTOMER_ID IN INTEGER) RETURN INTEGER
AS
BEGIN
    DELETE FROM CUSTOMER
    WHERE CUSTOMER.ID = L_CUSTOMER_ID;

    RETURN SQL%ROWCOUNT;  
END;
/

CREATE OR REPLACE FUNCTION UPDATE_CUSTOMER(L_CUSTOMER_ID IN INTEGER, L_FULLNAME IN STRING, L_EMAIL IN STRING, L_PASSWORD IN STRING, L_PHONE IN STRING, L_GENDER IN STRING) RETURN NUMBER
AS
    L_TEMP INTEGER;
BEGIN
    SELECT ID INTO L_TEMP
    FROM CUSTOMER
    WHERE (LOWER(EMAIL) = LOWER(L_EMAIL) OR PHONE = L_PHONE) AND ID != L_CUSTOMER_ID;
    
    RETURN 1;
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN
            UPDATE CUSTOMER SET
                EMAIL = L_EMAIL,
                FULL_NAME = L_FULLNAME,
                PASSWORD = L_PASSWORD,
                PHONE = L_PHONE,
                GENDER = L_GENDER,
                UPDATED_AT = SYSDATE
            WHERE ID = L_CUSTOMER_ID;
            RETURN 0;
END;
/

CREATE OR REPLACE FUNCTION AUTHENTICATE_CUSTOMER(L_EMAIL IN STRING, L_PASSWORD IN STRING, L_ID OUT NUMBER) RETURN NUMBER
AS
BEGIN
    SELECT ID INTO L_ID
    FROM CUSTOMER C 
    WHERE (C.EMAIL = L_EMAIL AND C.PASSWORD = L_PASSWORD) AND (C.IS_LOGIN = 0);
    
    UPDATE CUSTOMER SET
        IS_LOGIN = 1
    WHERE ID = L_ID;

    RETURN 0;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN 1;
END;
/

CREATE OR REPLACE PROCEDURE LOGOUT_CUSTOMER(L_CUSTOMER_ID IN INTEGER) 
IS
BEGIN
    UPDATE CUSTOMER SET
        IS_LOGIN = 0
    WHERE ID = L_CUSTOMER_ID;
END;
/



