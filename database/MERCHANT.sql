-- DATA MANIPULATION LANGUAGE
SET SERVEROUTPUT ON;
--SEPUTAR MERCHANT
SELECT *
FROM MERCHANT;

INSERT INTO MERCHANT (id, name, email, password, status, phone, website)
VALUES(NULL, 'Spicy Resato', 'spicyresto@efoodcourt.com', 'spicy', 0, '082317900923', 'spicyresto.com');

UPDATE MERCHANT SET
    STATUS = 0
WHERE ID = 21;


--
-- PL SQL PROCEDURE/FUNCTION DECLARATION
--
CREATE OR REPLACE PROCEDURE READ_A_MERCHANT(L_MERCHANT_ID IN INTEGER) IS
    L_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN L_CURSOR FOR
        SELECT *
        FROM MERCHANT
        WHERE MERCHANT.ID = L_MERCHANT_ID;
        
    DBMS_SQL.RETURN_RESULT(L_CURSOR);
END;
/

CREATE OR REPLACE PROCEDURE READ_ALL_MERCHANT IS
    L_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN L_CURSOR FOR
        SELECT *
        FROM MERCHANT
        ORDER BY ID;
        
    DBMS_SQL.RETURN_RESULT(L_CURSOR);
END;
/

CREATE OR REPLACE FUNCTION DELETE_A_MERCHANT(L_MERCHANT_ID IN INTEGER) RETURN INTEGER AS
BEGIN
    DELETE FROM MERCHANT
    WHERE MERCHANT.ID = L_MERCHANT_ID;
    
    RETURN SQL%ROWCOUNT;
END;
/

CREATE OR REPLACE FUNCTION CREATE_MERCHANT(L_NAME IN STRING, L_EMAIL IN STRING, L_PASSWORD IN STRING, L_PHONE IN STRING, L_WEBSITE IN STRING) RETURN INTEGER
AS
L_FLAG INTEGER;
BEGIN
--    L_FLAG := CHECK_DUPLICATE_MERCHANT_NAME(L_NAME);
    
    SELECT ID INTO L_FLAG
    FROM MERCHANT
    WHERE LOWER(NAME) = LOWER(L_NAME);
    
    RETURN 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        INSERT INTO MERCHANT (id, name, email, password, status, phone, website)
        VALUES(NULL, L_NAME, L_EMAIL, L_PASSWORD, 0, L_PHONE, L_WEBSITE);
        RETURN 0;
END;
/

CREATE OR REPLACE FUNCTION UPDATE_MERCHANT(L_MERCHANT_ID IN STRING, L_NAME IN STRING, L_EMAIL IN STRING, L_PASSWORD IN STRING, L_STATUS IN INTEGER, L_PHONE IN STRING, L_WEBSITE IN STRING)RETURN INTEGER
AS
L_MERCHANT MERCHANT%ROWTYPE;
BEGIN
    SELECT * INTO L_MERCHANT
    FROM MERCHANT
    WHERE LOWER(NAME) = LOWER(L_NAME) AND ID != L_MERCHANT_ID;
    
    RETURN 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            UPDATE MERCHANT SET
                NAME = L_NAME,
                EMAIL = L_EMAIL,
                PASSWORD = L_PASSWORD,
                STATUS = L_STATUS,
                PHONE = L_PHONE,
                WEBSITE = L_WEBSITE
            WHERE ID = L_MERCHANT_ID;
            RETURN 0;
END;
/

CREATE OR REPLACE FUNCTION AUTHENTICATE_MERCHANT(L_EMAIL IN STRING, L_PASSWORD IN STRING, L_ID OUT INTEGER) RETURN INTEGER
AS
L_MERCHANT MERCHANT%ROWTYPE;
BEGIN
    SELECT * INTO L_MERCHANT
    FROM MERCHANT
    WHERE EMAIL = L_EMAIL AND PASSWORD = L_PASSWORD;

    L_ID := L_MERCHANT.ID;

    RETURN 0;
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN
            RETURN 1;
END;
/
