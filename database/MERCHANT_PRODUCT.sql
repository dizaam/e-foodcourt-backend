-- DATA MANIPULATION LANGUAGE
SET SERVEROUTPUT ON;
--SEPUTAR MERCHANT
SELECT *
FROM MERCHANT;

INSERT INTO MERCHANT (id, name, email, password, status, phone, website)
VALUES(NULL, 'Spicy Resato', 'spicyresto@efoodcourt.com', 'spicy', 0, '082317900923', 'spicyresto.com');

UPDATE MERCHANT SET
    STATUS = 0
WHERE ID = 21;


CREATE OR REPLACE FUNCTION CREATE_MERCHANT(L_NAME IN STRING, L_EMAIL IN STRING, L_PASSWORD IN STRING, L_PHONE IN STRING, L_WEBSITE IN STRING) RETURN INTEGER
AS
L_FLAG INTEGER;
BEGIN
--    L_FLAG := CHECK_DUPLICATE_MERCHANT_NAME(L_NAME);
    
    SELECT ID INTO L_FLAG
    FROM MERCHANT
    WHERE LOWER(NAME) = LOWER(L_NAME);
    
    RETURN 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        INSERT INTO MERCHANT (id, name, email, password, status, phone, website)
        VALUES(NULL, L_NAME, L_EMAIL, L_PASSWORD, 0, L_PHONE, L_WEBSITE);
        RETURN 0;
END;

CREATE OR REPLACE FUNCTION UPDATE_MERCHANT(L_MERCHANT_ID IN STRING, L_NAME IN STRING, L_EMAIL IN STRING, L_PASSWORD IN STRING, L_STATUS IN INTEGER, L_PHONE IN STRING, L_WEBSITE IN STRING)RETURN INTEGER
AS
L_MERCHANT MERCHANT%ROWTYPE;
BEGIN
    SELECT * INTO L_MERCHANT
    FROM MERCHANT
    WHERE LOWER(NAME) = LOWER(L_NAME) AND ID != L_MERCHANT_ID;
    
    RETURN 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            UPDATE MERCHANT SET
                NAME = L_NAME,
                EMAIL = L_EMAIL,
                PASSWORD = L_PASSWORD,
                STATUS = L_STATUS,
                PHONE = L_PHONE,
                WEBSITE = L_WEBSITE
            WHERE ID = L_MERCHANT_ID;
            RETURN 0;
END;

CREATE OR REPLACE FUNCTION AUTHENTICATE_MERCHANT(L_EMAIL IN STRING, L_PASSWORD IN STRING, L_ID OUT INTEGER) RETURN INTEGER
AS
L_MERCHANT MERCHANT%ROWTYPE;
BEGIN
    SELECT * INTO L_MERCHANT
    FROM MERCHANT
    WHERE EMAIL = L_EMAIL AND PASSWORD = L_PASSWORD;

    L_ID := L_MERCHANT.ID;

    RETURN 0;
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN
            RETURN 1;
END;

--SEPUTAR category
SELECT *
FROM CATEGORY;

INSERT INTO CATEGORY(ID, NAME)
VALUES(NULL, 'Makanan korea');

DELETE FROM category where id=26;

--SEPUTAR PRODUCTS
SELECT *
FROM PRODUCT;

INSERT INTO PRODUCT (ID, DESCRIPTION, TITLE, PRICE, IMAGE_URL, STOCK, CATEGORY_ID, MERCHANT_ID)
VALUES(NULL, 'Seblak super pedes', 'Seblak Gila', 15000, 'google.com', 10, 1, 21);

DELETE FROM PRODUCT WHERE ID = 121;

UPDATE PRODUCT SET
    STOCK = 100;

CREATE OR REPLACE FUNCTION GET_STOCK_PRODUCT(L_PRODUCT_ID IN INTEGER) RETURN INTEGER
AS
L_STOCK INTEGER;
BEGIN
    SELECT STOCK INTO L_STOCK 
    FROM PRODUCT
    WHERE ID = L_PRODUCT_ID;

    RETURN L_STOCK;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN -1;
END;

create or replace FUNCTION CREATE_PRODUCT(L_TITLE IN STRING, L_DESCRIPTION IN STRING, L_PRICE IN INTEGER, L_STOCK IN INTEGER, L_IMAGE_URL IN CLOB, L_CATEGORY_ID IN INTEGER, L_MERCHANT_ID IN INTEGER) RETURN INTEGER
AS
L_FLAG INTEGER;
BEGIN
    
    SELECT ID INTO L_FLAG
    FROM PRODUCT
    WHERE LOWER(TITLE) = LOWER(L_TITLE) AND MERCHANT_ID = L_MERCHANT_ID;
    
    RETURN 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            INSERT INTO PRODUCT (ID, TITLE, DESCRIPTION, PRICE, STOCK, IMAGE_URL, CATEGORY_ID, MERCHANT_ID)
            VALUES(NULL, L_TITLE, L_DESCRIPTION, L_PRICE, L_STOCK, L_IMAGE_URL, L_CATEGORY_ID, L_MERCHANT_ID);
            RETURN 0;        
END;

DECLARE
    X INTEGER := -10;
BEGIN
    X := ADD_NEW_PRODUCT('Ramyeon', 'Mie kuah ala Korea', 20000, 100, 'google.com', 21, 21);
    DBMS_OUTPUT.PUT_LINE('X: ' ||  X);
END;

CREATE OR REPLACE PROCEDURE UPDATE_PRODUCT(L_ID IN INTEGER, L_TITLE IN STRING, L_DESCRIPTION IN STRING, L_PRICE IN INTEGER, L_STOCK IN INTEGER, L_IMAGE_URL IN STRING, L_CATEGORY_ID IN INTEGER)
IS
BEGIN
    UPDATE PRODUCT SET
        TITLE = L_TITLE,
        DESCRIPTION = L_DESCRIPTION,
        PRICE = L_PRICE,
        STOCK = L_STOCK,
        IMAGE_URL = L_IMAGE_URL,
        CATEGORY_ID = L_CATEGORY_ID
    WHERE ID = L_ID;
END;

BEGIN
    UPDATE_PRODUCT(21, 'Seblak Terserah', 'Terserah kamu gimana', 20000, 100, 'google.com', 2);
END;


-- GET ALL PRODUCT OWNED BY A MERCHANT
SELECT *
FROM PRODUCT;

    


